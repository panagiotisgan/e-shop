@page "/Login"
@using eShop.Blazor.UI.Dto_Model

@inject NavigationManager navManager
@inject IJSRuntime jsRuntime

@if (ShowAuthenticationError)
{
    <div class="alert alert-danger" role="alert">
        <p>@AuthenticationErrorText</p>
    </div>
}
<div class="row justify-content-center">
<EditForm Model="userModel" OnValidSubmit="OnLogin" class="col-12 col-md-8 card card-body m-3">
    <DataAnnotationsValidator />
    @*<ValidationSummary />*@
    <div class="form-group row">
        <label for="email" class="col-12 col-md-2 col-form-label">Username</label>
        <div class="col-12 col-md-4">
            <InputText id="username" class="form-control" @bind-Value="@userModel.Username" />
            <ValidationMessage For="@(()=>userModel.Username)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="password" class="col-12 col-md-2 col-form-label">Password</label>
        <div class="col-12 col-md-4">
            <InputText type="password" id="password" class="form-control" @bind-Value="@userModel.Password" />
            <ValidationMessage For="@(()=>userModel.Password)" />
        </div>
    </div>

    <div class="form-check row">        
        <div class="col-12">
            <InputCheckbox id="isHuman" class="form-check-input" @bind-Value="@userModel.IsHuman" @onchange="CheckBoxClicked"/>
            <ValidationMessage For="@(()=>userModel.IsHuman)" />
            <label for="isHuman" class="col-12 form-check-label">I'm not a robot.</label>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-right">
            <button type="submit" class="btn btn-success">Log in</button>
        </div>
    </div>
</EditForm>
</div>
@code {
    AlertComponent alertComponent;
    [Parameter]
    public string Username { get; set; }
    [Parameter]
    public string Password { get; set; }
    [Inject]
    protected IAuthenticationService authService { get; set; }
    private AuthenticationUserModel userModel = new();
    private string AuthenticationErrorText = "";
    private bool ShowAuthenticationError = false;


    EventCallback<bool> UpdateCheckBox { get; set; }


    void CheckBoxClicked()
    {
        if (userModel.IsHuman)
        {
            userModel.IsHuman = false;
            Console.WriteLine($"Value:{userModel.IsHuman}");    
        }
        else
        {
            userModel.IsHuman = true;
            Console.WriteLine($"Value:{userModel.IsHuman}");    
        }
    }

    private async Task OnLogin()
    {
        ShowAuthenticationError = false;



        AuthenticatedUserModel result = await authService.Login(userModel);

        if (result != null)
        {
            navManager.NavigateTo("/admin/products", true);
        }
        else
        {
            AuthenticationErrorText = "An error occure during the log in process";
            ShowAuthenticationError = true;
        }
    }
}
