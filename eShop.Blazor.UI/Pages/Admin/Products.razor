@page "/admin/products"

@*@inherits ProductsBase*@
@inject IProductViewModel productViewModel
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "User")]

<h3>Products List</h3>
<div class="row">
    <div class="col-6 col-md-2">
        <a href="/createProduct"><button class="btn btn-outline-primary">Add Product</button></a>
    </div>
</div>
<table class="table table-responsive-sm">
    <thead>
        <tr>
            <th>Code</th>
            <th>Name</th>
            <th>Price</th>
            <th>Stock</th>
            <th class="text-center">Edit</th>
            <th class="text-center">Delete</th>
        </tr>
    </thead>
    @if (productViewModel.Products != null)
    {
        <tbody>
            @foreach (var product in productViewModel.Products)
            {
                var Value = product.Id;
                var url = NavigationManager.ToAbsoluteUri($"UpdateProduct/{Value}");
                <tr>
                    <td>@product.Code</td>
                    <td>@product.Name</td>
                    <td>@product.Price</td>
                    <td>@product.StockQty</td>                    
                    <td class="text-center"><a href="@url"><span class="fas fa-edit"></span></a></td>
                    <td class="text-center"><span class="fas fa-trash-alt" @onclick="async () => await productViewModel.DeleteProduct(product.Id)"></span></td>
                </tr>

            }
        </tbody>
    }
</table>

@code{
    protected override async Task OnInitializedAsync()
    {
        await productViewModel.GetProductsAsync();
    }
}
